import java.util.ArrayDeque;
import java.util.Deque;

public class CANBeDividedinTwoCliques {

    static int V=5;

    static boolean isBipartiteUtil(int G[][],int src,int colorArr[]){

        colorArr[src]=1;
        Deque<Integer>q=new ArrayDeque<>();
        q.add(src);
        while (!q.isEmpty()){
            int u=q.poll();
            for(int v=0;v<V;v++){
                if (G[u][v] == 1 && colorArr[v] == -1)
                {
                    // Assign alternate color to this adjacent
                    // v of u
                    colorArr[v] = 1 - colorArr[u];
                    q.push(v);
                }
                else if (G[u][v] ==1 && colorArr[v] == colorArr[u])
                    return false;
            }


        }
        return true;
    }


    static boolean isBipartite(int G[][])
    {
        // Create a color array to store colors assigned
        // to all vertices. Vertex number is used as index in
        // this array. The value '-1' of  colorArr[i]
        // is used to indicate that no color is assigned to
        // vertex 'i'.  The value 1 is used to indicate first
        // color is assigned and value 0 indicates
        // second color is assigned.
        int colorArr[]=new int[V];
        for (int i = 0; i < V; ++i)
            colorArr[i] = -1;

        // One by one check all not yet colored vertices.
        for (int i = 0; i < V; i++)
            if (colorArr[i] == -1)
                if (isBipartiteUtil(G, i, colorArr) == false)
                    return false;

        return true;
    }

    static boolean canBeDividedinTwoCliques(int G[][])
    {
        // Find complement of G[][]
        // All values are complemented except
        // diagonal ones
        int GC[][]=new int[V][V];
        for (int i=0; i<V; i++)
            for (int j=0; j<V; j++)
                GC[i][j] = (i != j)?  -GC[i][j] : 0;

        // Return true if complement is Bipartite
        // else false.
        return  isBipartite(GC);
    }


    public static void main(String args[]){
        int G[][] = {{0, 1, 1, 1, 0},
                {1, 0, 1, 0, 0},
                {1, 1, 0, 0, 0},
                {0, 1, 0, 0, 1},
                {0, 0, 0, 1, 0}
        };

        if(canBeDividedinTwoCliques(G))
            System.out.println("Yes");
        else
            System.out.println("No");


    }
}
